{"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./src/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'https://mystifying-beaver-ee03b5.netlify.app',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  } //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {Object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {Object}  test             test object\n   * @param {Object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {Any}     result.result    return object of test function\n   * @param {Number}  result.duration  duration of test\n   * @param {Boolean} result.passed    true if test has passed, otherwise false\n   * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {Object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  //onReload: function(oldSessionId, newSessionId) {\n  //}\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["wdio.conf.js"],"names":["exports","config","specs","exclude","maxInstances","capabilities","browserName","acceptInsecureCerts","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","mochaOpts","ui","timeout"],"mappings":";;AAAAA,OAAO,CAACC,MAAR,GAAiB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,KAAK,EAAE,CACH,qBADG,CAvBM;AA0Bb;AACAC,EAAAA,OAAO,EAAE,CACL;AADK,GA3BI;AA8Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,EA9CD;AA+Cb;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,CAAC;AAEX;AACA;AACA;AACAD,IAAAA,YAAY,EAAE,CALH;AAMX;AACAE,IAAAA,WAAW,EAAE,QAPF;AAQXC,IAAAA,mBAAmB,EAAE,IARV,CASX;AACA;AACA;AACA;;AAZW,GAAD,CApDD;AAkEb;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,MAzEG;AA0Eb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,IAAI,EAAE,CA3FO;AA4Fb;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,8CAjGI;AAkGb;AACA;AACAC,EAAAA,cAAc,EAAE,KApGH;AAqGb;AACA;AACA;AACAC,EAAAA,sBAAsB,EAAE,MAxGX;AAyGb;AACA;AACAC,EAAAA,oBAAoB,EAAE,CA3GT;AA4Gb;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,CAAC,cAAD,CAjHG;AAmHb;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,OAzHE;AA0Hb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,CAAC,MAAD,CAvIE;AA2Ib;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,EAAE,EAAE,KADG;AAEPC,IAAAA,OAAO,EAAE;AAFF,GA9IE,CAkJb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AAGA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AA3Ra,CAAjB","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/","sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    \n    specs: [\n        './src/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'https://mystifying-beaver-ee03b5.netlify.app',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {Object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {Object}  test             test object\n     * @param {Object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {Any}     result.result    return object of test function\n     * @param {Number}  result.duration  duration of test\n     * @param {Boolean} result.passed    true if test has passed, otherwise false\n     * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {Object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    //onReload: function(oldSessionId, newSessionId) {\n    //}\n}\n"]}},"mtime":1645625829243},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/specs/cyber_attack_statistics_test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nvar _main_page = _interopRequireDefault(require(\"../pages/main_page\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ndescribe('Check Cyber attack statistics', () => {\n  beforeEach(function () {\n    _main_page.default.open_cyber_attack_statistics();\n  });\n  describe('Verify Cyber attack statistics filtering feature - without result', () => {\n    it('Check filtering feature functionality with invalid data', async () => {\n      await _main_page.default.check_cyber_attack_statistics_page_is_visible();\n      await _main_page.default.check_filtering_functionality_with_invalid_data();\n    });\n  });\n  describe('Verify Cyber attack statistics filtering feature - with result', () => {\n    it('Check filtering feature functionality with valid data', async () => {\n      await _main_page.default.check_cyber_attack_statistics_page_is_visible();\n      await _main_page.default.check_filtering_functionality_with_valid_data();\n    });\n  });\n  describe('Verify Cyber attack statistics sorting feature', () => {\n    it('Check sorting feature functionality', async () => {\n      await _main_page.default.check_cyber_attack_statistics_page_is_visible();\n      const isSorting = await _main_page.default.check_sorting_functionality_with_different_sort_data();\n      isSorting.forEach(sort_check => {\n        expect(sort_check).toBe(true, 'Sorting is not working properly');\n      });\n    });\n  });\n  afterEach(() => {\n    _main_page.default.reload_browser();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN5YmVyX2F0dGFja19zdGF0aXN0aWNzX3Rlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiTWFpblBhZ2UiLCJvcGVuX2N5YmVyX2F0dGFja19zdGF0aXN0aWNzIiwiaXQiLCJjaGVja19jeWJlcl9hdHRhY2tfc3RhdGlzdGljc19wYWdlX2lzX3Zpc2libGUiLCJjaGVja19maWx0ZXJpbmdfZnVuY3Rpb25hbGl0eV93aXRoX2ludmFsaWRfZGF0YSIsImNoZWNrX2ZpbHRlcmluZ19mdW5jdGlvbmFsaXR5X3dpdGhfdmFsaWRfZGF0YSIsImlzU29ydGluZyIsImNoZWNrX3NvcnRpbmdfZnVuY3Rpb25hbGl0eV93aXRoX2RpZmZlcmVudF9zb3J0X2RhdGEiLCJmb3JFYWNoIiwic29ydF9jaGVjayIsImV4cGVjdCIsInRvQmUiLCJhZnRlckVhY2giLCJyZWxvYWRfYnJvd3NlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUdBQSxRQUFRLENBQUMsK0JBQUQsRUFBa0MsTUFBTTtBQUU1Q0MsRUFBQUEsVUFBVSxDQUFDLFlBQVU7QUFDakJDLHVCQUFTQyw0QkFBVDtBQUNILEdBRlMsQ0FBVjtBQUlBSCxFQUFBQSxRQUFRLENBQUMsbUVBQUQsRUFBc0UsTUFBTTtBQUVsRkksSUFBQUEsRUFBRSxDQUFDLHlEQUFELEVBQTRELFlBQVk7QUFFckUsWUFBTUYsbUJBQVNHLDZDQUFULEVBQU47QUFFQSxZQUFNSCxtQkFBU0ksK0NBQVQsRUFBTjtBQUdKLEtBUEMsQ0FBRjtBQVFILEdBVlMsQ0FBUjtBQVlGTixFQUFBQSxRQUFRLENBQUMsZ0VBQUQsRUFBbUUsTUFBTTtBQUUvRUksSUFBQUEsRUFBRSxDQUFDLHVEQUFELEVBQTBELFlBQVk7QUFFbkUsWUFBTUYsbUJBQVNHLDZDQUFULEVBQU47QUFFQSxZQUFNSCxtQkFBU0ssNkNBQVQsRUFBTjtBQUVKLEtBTkMsQ0FBRjtBQU9ELEdBVE8sQ0FBUjtBQVdDUCxFQUFBQSxRQUFRLENBQUMsZ0RBQUQsRUFBbUQsTUFBTTtBQUVoRUksSUFBQUEsRUFBRSxDQUFDLHFDQUFELEVBQXdDLFlBQVk7QUFFbEQsWUFBTUYsbUJBQVNHLDZDQUFULEVBQU47QUFFQSxZQUFNRyxTQUFTLEdBQUcsTUFBTU4sbUJBQVNPLG9EQUFULEVBQXhCO0FBRUFELE1BQUFBLFNBQVMsQ0FBQ0UsT0FBVixDQUNJQyxVQUFVLElBQUk7QUFDVkMsUUFBQUEsTUFBTSxDQUFDRCxVQUFELENBQU4sQ0FBbUJFLElBQW5CLENBQXdCLElBQXhCLEVBQTZCLGlDQUE3QjtBQUFpRSxPQUZ6RTtBQUlILEtBVkMsQ0FBRjtBQVdILEdBYlUsQ0FBUjtBQWVFQyxFQUFBQSxTQUFTLENBQUMsTUFBTTtBQUNaWix1QkFBU2EsY0FBVDtBQUNILEdBRlEsQ0FBVDtBQUlKLENBaERPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2thZGVyL0lkZWFQcm9qZWN0cy9FY2xlY3RpY0lRX3Rlc3RfYXV0b21hdGlvbi9zcmMvc3BlY3MvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1haW5QYWdlIGZyb20gJy4uL3BhZ2VzL21haW5fcGFnZSc7XG5cblxuZGVzY3JpYmUoJ0NoZWNrIEN5YmVyIGF0dGFjayBzdGF0aXN0aWNzJywgKCkgPT4ge1xuXG4gICAgYmVmb3JlRWFjaChmdW5jdGlvbigpe1xuICAgICAgICBNYWluUGFnZS5vcGVuX2N5YmVyX2F0dGFja19zdGF0aXN0aWNzKCk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZSgnVmVyaWZ5IEN5YmVyIGF0dGFjayBzdGF0aXN0aWNzIGZpbHRlcmluZyBmZWF0dXJlIC0gd2l0aG91dCByZXN1bHQnLCAoKSA9PiB7XG5cbiAgICAgIGl0KCdDaGVjayBmaWx0ZXJpbmcgZmVhdHVyZSBmdW5jdGlvbmFsaXR5IHdpdGggaW52YWxpZCBkYXRhJywgYXN5bmMgKCkgPT4ge1xuXG4gICAgICAgICAgIGF3YWl0IE1haW5QYWdlLmNoZWNrX2N5YmVyX2F0dGFja19zdGF0aXN0aWNzX3BhZ2VfaXNfdmlzaWJsZSgpO1xuXG4gICAgICAgICAgIGF3YWl0IE1haW5QYWdlLmNoZWNrX2ZpbHRlcmluZ19mdW5jdGlvbmFsaXR5X3dpdGhfaW52YWxpZF9kYXRhKCk7ICAgXG5cblxuICAgICAgfSk7IFxuICB9KTtcblxuICBkZXNjcmliZSgnVmVyaWZ5IEN5YmVyIGF0dGFjayBzdGF0aXN0aWNzIGZpbHRlcmluZyBmZWF0dXJlIC0gd2l0aCByZXN1bHQnLCAoKSA9PiB7XG5cbiAgICBpdCgnQ2hlY2sgZmlsdGVyaW5nIGZlYXR1cmUgZnVuY3Rpb25hbGl0eSB3aXRoIHZhbGlkIGRhdGEnLCBhc3luYyAoKSA9PiB7XG5cbiAgICAgICAgIGF3YWl0IE1haW5QYWdlLmNoZWNrX2N5YmVyX2F0dGFja19zdGF0aXN0aWNzX3BhZ2VfaXNfdmlzaWJsZSgpO1xuXG4gICAgICAgICBhd2FpdCBNYWluUGFnZS5jaGVja19maWx0ZXJpbmdfZnVuY3Rpb25hbGl0eV93aXRoX3ZhbGlkX2RhdGEoKTsgICAgICBcblxuICAgIH0pO1xuICB9KTtcblxuICAgZGVzY3JpYmUoJ1ZlcmlmeSBDeWJlciBhdHRhY2sgc3RhdGlzdGljcyBzb3J0aW5nIGZlYXR1cmUnLCAoKSA9PiB7XG5cbiAgICBpdCgnQ2hlY2sgc29ydGluZyBmZWF0dXJlIGZ1bmN0aW9uYWxpdHknLCBhc3luYyAoKSA9PiB7XG5cbiAgICAgICAgYXdhaXQgTWFpblBhZ2UuY2hlY2tfY3liZXJfYXR0YWNrX3N0YXRpc3RpY3NfcGFnZV9pc192aXNpYmxlKCk7XG5cbiAgICAgICAgY29uc3QgaXNTb3J0aW5nID0gYXdhaXQgTWFpblBhZ2UuY2hlY2tfc29ydGluZ19mdW5jdGlvbmFsaXR5X3dpdGhfZGlmZmVyZW50X3NvcnRfZGF0YSgpOyAgXG5cbiAgICAgICAgaXNTb3J0aW5nLmZvckVhY2goXG4gICAgICAgICAgICBzb3J0X2NoZWNrID0+IHsgXG4gICAgICAgICAgICAgICAgZXhwZWN0KHNvcnRfY2hlY2spLnRvQmUodHJ1ZSwnU29ydGluZyBpcyBub3Qgd29ya2luZyBwcm9wZXJseScpO30pXG4gICAgICAgICAgICAgICAgXG4gICAgfSk7XG59KTtcblxuICAgICBhZnRlckVhY2goKCkgPT4ge1xuICAgICAgICAgTWFpblBhZ2UucmVsb2FkX2Jyb3dzZXIoKTtcbiAgICAgfSk7XG5cbn0pO1xuXG4iXX0=","map":{"version":3,"sources":["cyber_attack_statistics_test.js"],"names":["describe","beforeEach","MainPage","open_cyber_attack_statistics","it","check_cyber_attack_statistics_page_is_visible","check_filtering_functionality_with_invalid_data","check_filtering_functionality_with_valid_data","isSorting","check_sorting_functionality_with_different_sort_data","forEach","sort_check","expect","toBe","afterEach","reload_browser"],"mappings":";;AAAA;;;;AAGAA,QAAQ,CAAC,+BAAD,EAAkC,MAAM;AAE5CC,EAAAA,UAAU,CAAC,YAAU;AACjBC,uBAASC,4BAAT;AACH,GAFS,CAAV;AAIAH,EAAAA,QAAQ,CAAC,mEAAD,EAAsE,MAAM;AAElFI,IAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAY;AAErE,YAAMF,mBAASG,6CAAT,EAAN;AAEA,YAAMH,mBAASI,+CAAT,EAAN;AAGJ,KAPC,CAAF;AAQH,GAVS,CAAR;AAYFN,EAAAA,QAAQ,CAAC,gEAAD,EAAmE,MAAM;AAE/EI,IAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAY;AAEnE,YAAMF,mBAASG,6CAAT,EAAN;AAEA,YAAMH,mBAASK,6CAAT,EAAN;AAEJ,KANC,CAAF;AAOD,GATO,CAAR;AAWCP,EAAAA,QAAQ,CAAC,gDAAD,EAAmD,MAAM;AAEhEI,IAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAY;AAElD,YAAMF,mBAASG,6CAAT,EAAN;AAEA,YAAMG,SAAS,GAAG,MAAMN,mBAASO,oDAAT,EAAxB;AAEAD,MAAAA,SAAS,CAACE,OAAV,CACIC,UAAU,IAAI;AACVC,QAAAA,MAAM,CAACD,UAAD,CAAN,CAAmBE,IAAnB,CAAwB,IAAxB,EAA6B,iCAA7B;AAAiE,OAFzE;AAIH,KAVC,CAAF;AAWH,GAbU,CAAR;AAeEC,EAAAA,SAAS,CAAC,MAAM;AACZZ,uBAASa,cAAT;AACH,GAFQ,CAAT;AAIJ,CAhDO,CAAR","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/specs/","sourcesContent":["import MainPage from '../pages/main_page';\n\n\ndescribe('Check Cyber attack statistics', () => {\n\n    beforeEach(function(){\n        MainPage.open_cyber_attack_statistics();\n    });\n\n    describe('Verify Cyber attack statistics filtering feature - without result', () => {\n\n      it('Check filtering feature functionality with invalid data', async () => {\n\n           await MainPage.check_cyber_attack_statistics_page_is_visible();\n\n           await MainPage.check_filtering_functionality_with_invalid_data();   \n\n\n      }); \n  });\n\n  describe('Verify Cyber attack statistics filtering feature - with result', () => {\n\n    it('Check filtering feature functionality with valid data', async () => {\n\n         await MainPage.check_cyber_attack_statistics_page_is_visible();\n\n         await MainPage.check_filtering_functionality_with_valid_data();      \n\n    });\n  });\n\n   describe('Verify Cyber attack statistics sorting feature', () => {\n\n    it('Check sorting feature functionality', async () => {\n\n        await MainPage.check_cyber_attack_statistics_page_is_visible();\n\n        const isSorting = await MainPage.check_sorting_functionality_with_different_sort_data();  \n\n        isSorting.forEach(\n            sort_check => { \n                expect(sort_check).toBe(true,'Sorting is not working properly');})\n                \n    });\n});\n\n     afterEach(() => {\n         MainPage.reload_browser();\n     });\n\n});\n\n"]}},"mtime":1647442363934},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/main_page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cyber_attack_statistics_testdata = _interopRequireDefault(require(\"../testdata/cyber_attack_statistics_testdata\"));\n\nvar _page = _interopRequireDefault(require(\"./page\"));\n\nvar _jsAbbreviationNumber = require(\"js-abbreviation-number\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass MainPage extends _page.default {\n  get app() {\n    return $('//div[@id=\"app\"]');\n  }\n\n  get filtering() {\n    return $('//div[@class=\"filtering\"]');\n  }\n\n  get filter_input() {\n    return $('//*[@id=\"filter-input\"]');\n  }\n\n  get sorting() {\n    return $('//div[@class=\"sorting\"]');\n  }\n\n  get sort_select() {\n    return $('//select[@id=\"sort-select\"]');\n  }\n\n  get table() {\n    return $('//div[@class=\"table\"]');\n  }\n\n  get table_content() {\n    return $('//div[@class=\"table-content\"]');\n  }\n\n  async get_table_row_elements() {\n    return await \"div.table-content > div.table-row\";\n  }\n\n  async get_table_data_elements() {\n    return await \"div.table-content > div> div.table-data.data-name\";\n  }\n\n  async open_cyber_attack_statistics() {\n    await super.open_cyber_attack_statistics();\n  }\n\n  async reload_browser() {\n    await super.reload_browser();\n  }\n\n  async check_cyber_attack_statistics_page_is_visible() {\n    expect(this.app).toBeDisplayed();\n    expect(this.filtering).toBeDisplayed();\n    expect(this.sorting).toBeDisplayed();\n    expect(this.table).toBeDisplayed();\n    console.log(\"Cyber attack statistics is visible\");\n  }\n\n  async enter_filter_data_value(filter_data) {\n    expect(await this.filter_input).toBeDisplayed();\n    await this.filter_input.setValue(filter_data);\n    console.log(\"Filter data was entered\");\n  }\n\n  async check_filtering_functionality_with_invalid_data() {\n    //use random data for filtering field\n    await this.enter_filter_data_value(_cyber_attack_statistics_testdata.default.RANDOM_DATA);\n    expect(await this.table_content).not.toBeDisplayed(); //check returned table after filtering\n\n    const table_rows = await $$(function () {\n      return this.document.querySelectorAll(this.get_table_row_elements);\n    });\n    await browser.pause(2000); // just to see what's happening on the screen\n\n    expect(table_rows.length).toBe(0, {\n      message: \"Table of statistics is not empty after invalid filtering.\"\n    });\n    console.log(\"Checking filtering functionality with invalid data\");\n  }\n\n  async check_filtering_functionality_with_valid_data() {\n    await browser.waitUntil(async () => ((await this.table_content.isDisplayed) == true, {\n      timeout: 5000,\n      timeoutMsg: 'table_content is not visible before filtering'\n    })); //first data of table, always will return result with filtering, and will check funcitonality of filtering with valid data\n\n    const textToBeUsedForFilter = await $$(function () {\n      return this.document.querySelectorAll(\"div.table-data\");\n    })[0].getText(); //enter filter data with exist value from table (first data of exist table)\n\n    await this.enter_filter_data_value(textToBeUsedForFilter);\n    await browser.waitUntil(async () => ((await this.table_content.isDisplayed) == true, {\n      timeout: 5000,\n      timeoutMsg: 'table_content is not visible after filtering'\n    }));\n    await browser.pause(2000); // just to see what's happening on the screen\n    //check returned table rows, get row text after filtering,  should have filtering text\n\n    const rows = await $$(function () {\n      return this.document.querySelectorAll(this.get_table_row_elements);\n    });\n    rows.forEach(element => {\n      expect(element.getText()).toHaveTextContaining(textToBeUsedForFilter);\n    });\n  }\n\n  async check_sorting_functionality_with_different_sort_data() {\n    //get all options from sorting selection\n    const sort_options = await $$(function () {\n      return this.document.querySelectorAll(\"#sort-select > option\");\n    });\n    let sorting_check = await []; //try all the options that received (in sort_options) one by one.\n\n    for (var i = 0; i < sort_options.length; i++) {\n      this.reload_browser();\n      const selected_sort_value = await sort_options[i].getValue();\n      const selected_sort_text = await sort_options[i].getText();\n      await this.sort_select.selectByAttribute('value', await selected_sort_value);\n      await browser.pause(2000); // just to see what's happening on the screen\n\n      console.log((await selected_sort_value) + \": Selected for sorting\");\n      await sorting_check.push(await this.check_sorting_is_true(selected_sort_text));\n    }\n\n    return sorting_check;\n  }\n\n  async check_sorting_is_true(selected_sort_value) {\n    //get the column names that will be affected by the sorting\n    const header_colon_items = await $$(function () {\n      return this.document.querySelectorAll(\"div.header__item\");\n    });\n    const table_rows = await $$(function () {\n      return this.document.querySelectorAll(\"div.table-row\");\n    });\n    let sorted_colon_element_list = await [];\n    let sorted_colon_index = -1; //find out which column is affected by sort and add this colon elements to list\n\n    for (var i = 0; i < header_colon_items.length; i++) {\n      const lower_case_header_name = (await header_colon_items[i].getText()).toLowerCase();\n\n      if (await lower_case_header_name.includes(selected_sort_value.toLowerCase())) {\n        sorted_colon_index = i;\n        break;\n      }\n    }\n\n    for (var i = 0; i < table_rows.length; i++) {\n      let sorted_element_value = await $$(function () {\n        return this.document.querySelectorAll(\"div.table-row\");\n      })[i].$$(\"div.table-data\")[sorted_colon_index].getText();\n      await sorted_colon_element_list.push(sorted_element_value);\n    }\n\n    return await this.check_order_of_table_values_according_to_rules(sorted_colon_element_list);\n  }\n\n  async check_order_of_table_values_according_to_rules(sorted_colon_element_list) {\n    switch (true) {\n      case sorted_colon_element_list.includes('low', 'medium', 'high'):\n        return this.check_sorting_of_complexity(sorted_colon_element_list);\n\n      case sorted_colon_element_list.includes('K', 'k', 'm', 'M', 'b', 'B') && sorted_colon_element_list.includes('1', '2', '3', '4', '5', '6', '7', '8', '9', '0'):\n        return this.check_sorting_of_number_of_cases(this.sorted_colon_element_list);\n\n      default:\n        return this.check_sorting_of_string_or_number(sorted_colon_element_list);\n    }\n  }\n\n  async check_sorting_of_complexity(sorted_colon_element_list) {\n    const complexityArray = [\"low\", \"medium\", \"high\"];\n    sorted_colon_element_list.forEach((element, index, arr) => {\n      if (index + 1 < arr.length) {\n        const first_element_complextiy = complexityArray.indexOf(element);\n        const second_element_omplexity = complexityArray.indexOf(arr[index + 1]);\n        const check_complexity = second_element_omplexity - first_element_complextiy; // for same complexty low-low, high-high, medium-medum difference should be 0, low-high, low-medium etc. difference >0, if difference <0 thats meaning sorting is  not true\n\n        if (check_complexity >= 0) return true;else return false;\n      }\n    });\n  }\n\n  async check_sorting_of_string_or_number(sorted_colon_element_list) {\n    if (sorted_colon_element_list.sort() == sorted_colon_element_list) {\n      return true;\n    } else return false;\n  }\n\n  async check_sorting_of_number_of_cases(sorted_colon_element_list) {\n    let list = [];\n    sorted_colon_element_list.forEach((element, index, arr) => {\n      const num = (0, _jsAbbreviationNumber.unabbreviateNumber)(element.getText());\n      list[index] = num;\n    });\n\n    if (list.sort().toEqual) {\n      return true;\n    } else return false;\n  }\n\n  async assert(condition, message) {\n    if (!condition) {\n      try {\n        throw new Error(message);\n      } catch (e) {\n        return console.error(e);\n      }\n    }\n  }\n\n}\n\nvar _default = new MainPage();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["main_page.js"],"names":["MainPage","Page","app","$","filtering","filter_input","sorting","sort_select","table","table_content","get_table_row_elements","get_table_data_elements","open_cyber_attack_statistics","reload_browser","check_cyber_attack_statistics_page_is_visible","expect","toBeDisplayed","console","log","enter_filter_data_value","filter_data","setValue","check_filtering_functionality_with_invalid_data","test_data","RANDOM_DATA","not","table_rows","$$","document","querySelectorAll","browser","pause","length","toBe","message","check_filtering_functionality_with_valid_data","waitUntil","isDisplayed","timeout","timeoutMsg","textToBeUsedForFilter","getText","rows","forEach","element","toHaveTextContaining","check_sorting_functionality_with_different_sort_data","sort_options","sorting_check","i","selected_sort_value","getValue","selected_sort_text","selectByAttribute","push","check_sorting_is_true","header_colon_items","sorted_colon_element_list","sorted_colon_index","lower_case_header_name","toLowerCase","includes","sorted_element_value","check_order_of_table_values_according_to_rules","check_sorting_of_complexity","check_sorting_of_number_of_cases","check_sorting_of_string_or_number","complexityArray","index","arr","first_element_complextiy","indexOf","second_element_omplexity","check_complexity","sort","list","num","toEqual","assert","condition","Error","e","error"],"mappings":"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","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/","sourcesContent":["import test_data from '../testdata/cyber_attack_statistics_testdata';\nimport Page from './page';\nimport { unabbreviateNumber } from \"js-abbreviation-number\";\n\nclass MainPage extends Page {\n\n    get app() { return $('//div[@id=\"app\"]'); }\n    get filtering() { return $('//div[@class=\"filtering\"]'); }\n    get filter_input() { return $('//*[@id=\"filter-input\"]'); }\n    get sorting() { return $('//div[@class=\"sorting\"]'); }\n    get sort_select() { return $('//select[@id=\"sort-select\"]'); }\n    get table() { return $('//div[@class=\"table\"]'); }\n    get table_content() { return $('//div[@class=\"table-content\"]'); }\n\n    async get_table_row_elements() {\n        return await (\"div.table-content > div.table-row\");\n    }\n\n    async get_table_data_elements() {\n        return await (\"div.table-content > div> div.table-data.data-name\");\n    }\n\n    async open_cyber_attack_statistics() {\n        await super.open_cyber_attack_statistics();\n    }\n\n    async reload_browser() {\n        await super.reload_browser();\n    }\n\n    async check_cyber_attack_statistics_page_is_visible () {\n        \n        expect(this.app).toBeDisplayed();\n\n        expect(this.filtering).toBeDisplayed();\n\n        expect(this.sorting).toBeDisplayed();\n\n        expect(this.table).toBeDisplayed();\n\n        console.log(\"Cyber attack statistics is visible\");\n    }\n    \n    async enter_filter_data_value(filter_data) {\n        expect( await this.filter_input).toBeDisplayed();\n        await this.filter_input.setValue(filter_data);\n        \n        console.log(\"Filter data was entered\");\n    }\n    \n    async check_filtering_functionality_with_invalid_data() {\n\n        //use random data for filtering field\n        await this.enter_filter_data_value(test_data.RANDOM_DATA);\n        expect(await this.table_content).not.toBeDisplayed();\n\n       //check returned table after filtering\n       const table_rows = await $$(function() { \n           return this.document.querySelectorAll(this.get_table_row_elements);\n       });\n\n       await browser.pause(2000)// just to see what's happening on the screen\n\n        expect(table_rows.length).toBe(0, { message: \"Table of statistics is not empty after invalid filtering.\"});\n\n        console.log(\"Checking filtering functionality with invalid data\");\n    }\n\n\n    async check_filtering_functionality_with_valid_data() {\n\n        await browser.waitUntil(\n            async () => (await this.table_content.isDisplayed == true,\n            {\n                timeout: 5000,\n                timeoutMsg: 'table_content is not visible before filtering'\n        }));\n\n        //first data of table, always will return result with filtering, and will check funcitonality of filtering with valid data\n        const textToBeUsedForFilter = await $$(function() { \n            return this.document.querySelectorAll(\"div.table-data\"); \n        })[0].getText();\n\n        //enter filter data with exist value from table (first data of exist table)\n        await this.enter_filter_data_value(textToBeUsedForFilter); \n        await browser.waitUntil(\n            async () => (await this.table_content.isDisplayed == true,\n            {\n                timeout: 5000,\n                timeoutMsg: 'table_content is not visible after filtering'\n        }));\n        await browser.pause(2000)// just to see what's happening on the screen\n\n       //check returned table rows, get row text after filtering,  should have filtering text\n       const rows = await $$(function() { \n        return this.document.querySelectorAll(this.get_table_row_elements);\n       });\n        rows.forEach((element) => {\n            expect(element.getText()).toHaveTextContaining(textToBeUsedForFilter);\n        });\n    }\n\n\n    async check_sorting_functionality_with_different_sort_data() {\n        //get all options from sorting selection\n        const sort_options = await $$(function() { \n            return this.document.querySelectorAll(\"#sort-select > option\"); \n        });\n\n        let sorting_check = await [];\n\n        //try all the options that received (in sort_options) one by one.\n        for (var i = 0; i < sort_options.length; i++) {\n            this.reload_browser();\n            const selected_sort_value = await sort_options[i].getValue();\n            const selected_sort_text = await sort_options[i].getText();\n\n            await this.sort_select.selectByAttribute('value', await selected_sort_value);\n\n            await browser.pause(2000)// just to see what's happening on the screen\n\n            console.log(await selected_sort_value + \": Selected for sorting\"); \n\n            await sorting_check.push(await this.check_sorting_is_true(selected_sort_text));\n        }\n\n        return sorting_check;\n    }\n\n    async check_sorting_is_true(selected_sort_value) {\n        \n        //get the column names that will be affected by the sorting\n        const header_colon_items = await $$(function() { \n            return this.document.querySelectorAll(\"div.header__item\"); \n        });\n\n        const table_rows = await $$(function() { \n            return this.document.querySelectorAll(\"div.table-row\"); \n        });\n\n\n        let sorted_colon_element_list = await [];\n        let sorted_colon_index= -1;\n\n        //find out which column is affected by sort and add this colon elements to list\n        for (var i = 0; i < header_colon_items.length; i++) {\n            const lower_case_header_name = (await header_colon_items[i].getText()).toLowerCase();\n            if(await lower_case_header_name.includes(selected_sort_value.toLowerCase())){\n                sorted_colon_index = i;\n                break;\n            }\n        }\n        for (var i = 0; i < table_rows.length; i++) {\n            \n            let sorted_element_value = await $$(function() { \n                return this.document.querySelectorAll(\"div.table-row\"); \n            })[i].$$(\"div.table-data\")[sorted_colon_index].getText();\n\n            await sorted_colon_element_list.push(sorted_element_value); \n\n        }\n\n        return await this.check_order_of_table_values_according_to_rules(sorted_colon_element_list);\n\n    } \n\n    async check_order_of_table_values_according_to_rules(sorted_colon_element_list) {\n\n        switch(true) {\n\n            case sorted_colon_element_list.includes('low','medium','high'):\n                return this.check_sorting_of_complexity(sorted_colon_element_list);\n            case sorted_colon_element_list.includes('K','k','m','M','b','B') && sorted_colon_element_list.includes('1','2','3','4','5','6','7','8','9','0'):\n                return this.check_sorting_of_number_of_cases(this.sorted_colon_element_list);\n            default:\n                return this.check_sorting_of_string_or_number(sorted_colon_element_list);\n          }\n    }\n\n    async check_sorting_of_complexity(sorted_colon_element_list) {\n    \n\n           const complexityArray = [\"low\" , \"medium\", \"high\"]\n           sorted_colon_element_list.forEach((element, index, arr) => {\n\n            if(index+1 < arr.length){\n                const first_element_complextiy = complexityArray.indexOf(element); \n                const second_element_omplexity = complexityArray.indexOf(arr[index+1]);\n\n                const check_complexity =  second_element_omplexity - first_element_complextiy; // for same complexty low-low, high-high, medium-medum difference should be 0, low-high, low-medium etc. difference >0, if difference <0 thats meaning sorting is  not true\n                \n                if(check_complexity>=0)\n                   return true;\n                else\n                   return false;\n            }\n           });\n   }\n\n   async check_sorting_of_string_or_number(sorted_colon_element_list) {\n\n        if(sorted_colon_element_list.sort() == sorted_colon_element_list){\n            return true;\n        }else\n            return false;\n   }   \n\n    async check_sorting_of_number_of_cases(sorted_colon_element_list) {\n    \n        let list = [];\n        sorted_colon_element_list.forEach((element, index, arr) => {\n\n            const num = unabbreviateNumber(element.getText());\n\n            list[index] = num;\n        });\n\n        if(list.sort().toEqual){\n            return true;\n        }else\n            return false;\n  } \n\n    async assert(condition, message) {\n        if (!condition) {\n            try {\n                throw new Error(message);\n            } catch(e) {\n                return console.error(e);\n            \n            }\n        }\n}\n} \n export default new MainPage();\n"]}},"mtime":1647442375781},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/testdata/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/testdata/cyber_attack_statistics_testdata.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nmodule.exports = {\n  PAGE_URL: \"https://mystifying-beaver-ee03b5.netlify.app/\",\n  RANDOM_DATA: Math.floor(Math.random() * 1000000000 + 1)\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN5YmVyX2F0dGFja19zdGF0aXN0aWNzX3Rlc3RkYXRhLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJQQUdFX1VSTCIsIlJBTkRPTV9EQVRBIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsUUFBUSxFQUFFLCtDQURHO0FBRWJDLEVBQUFBLFdBQVcsRUFBRUMsSUFBSSxDQUFDQyxLQUFMLENBQVlELElBQUksQ0FBQ0UsTUFBTCxLQUFnQixVQUFqQixHQUErQixDQUExQztBQUZBLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rYWRlci9JZGVhUHJvamVjdHMvRWNsZWN0aWNJUV90ZXN0X2F1dG9tYXRpb24vc3JjL3Rlc3RkYXRhLyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFBBR0VfVVJMOiBcImh0dHBzOi8vbXlzdGlmeWluZy1iZWF2ZXItZWUwM2I1Lm5ldGxpZnkuYXBwL1wiLFxuICAgIFJBTkRPTV9EQVRBOiBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMCkgKyAxKSxcbiAgfTtcbiJdfQ==","map":{"version":3,"sources":["cyber_attack_statistics_testdata.js"],"names":["module","exports","PAGE_URL","RANDOM_DATA","Math","floor","random"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE,+CADG;AAEbC,EAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,UAAjB,GAA+B,CAA1C;AAFA,CAAjB","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/testdata/","sourcesContent":["module.exports = {\n    PAGE_URL: \"https://mystifying-beaver-ee03b5.netlify.app/\",\n    RANDOM_DATA: Math.floor((Math.random() * 1000000000) + 1),\n  };\n"]}},"mtime":1646831611102},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cyber_attack_statistics_testdata = require(\"../testdata/cyber_attack_statistics_testdata\");\n\nclass Page {\n  open_cyber_attack_statistics() {\n    browser.maximizeWindow();\n    return browser.url(_cyber_attack_statistics_testdata.PAGE_URL);\n  }\n\n  reload_browser() {\n    console.log(\"Reload session of browser\");\n    browser.reload();\n  }\n\n  wait_page_upload() {\n    browser.waitUntil(() => browser.execute(() => document.readyState === 'complete')), {\n      timeout: 60 * 1000,\n      timeoutMsg: 'Message on failure'\n    };\n  }\n\n}\n\nexports.default = Page;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwibmFtZXMiOlsiUGFnZSIsIm9wZW5fY3liZXJfYXR0YWNrX3N0YXRpc3RpY3MiLCJicm93c2VyIiwibWF4aW1pemVXaW5kb3ciLCJ1cmwiLCJQQUdFX1VSTCIsInJlbG9hZF9icm93c2VyIiwiY29uc29sZSIsImxvZyIsInJlbG9hZCIsIndhaXRfcGFnZV91cGxvYWQiLCJ3YWl0VW50aWwiLCJleGVjdXRlIiwiZG9jdW1lbnQiLCJyZWFkeVN0YXRlIiwidGltZW91dCIsInRpbWVvdXRNc2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxNQUFNQSxJQUFOLENBQVc7QUFFdEJDLEVBQUFBLDRCQUE0QixHQUFHO0FBQzNCQyxJQUFBQSxPQUFPLENBQUNDLGNBQVI7QUFDQSxXQUFPRCxPQUFPLENBQUNFLEdBQVIsQ0FBWUMsMENBQVosQ0FBUDtBQUNIOztBQUVEQyxFQUFBQSxjQUFjLEdBQUk7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQU4sSUFBQUEsT0FBTyxDQUFDTyxNQUFSO0FBQ0Q7O0FBRUhDLEVBQUFBLGdCQUFnQixHQUFFO0FBQ2RSLElBQUFBLE9BQU8sQ0FBQ1MsU0FBUixDQUNJLE1BQU1ULE9BQU8sQ0FBQ1UsT0FBUixDQUFnQixNQUFNQyxRQUFRLENBQUNDLFVBQVQsS0FBd0IsVUFBOUMsQ0FEVixHQUVJO0FBQ0VDLE1BQUFBLE9BQU8sRUFBRSxLQUFLLElBRGhCO0FBRUVDLE1BQUFBLFVBQVUsRUFBRTtBQUZkLEtBRko7QUFNSDs7QUFuQnFCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rYWRlci9JZGVhUHJvamVjdHMvRWNsZWN0aWNJUV90ZXN0X2F1dG9tYXRpb24vc3JjL3BhZ2VzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBBR0VfVVJMIH0gZnJvbSBcIi4uL3Rlc3RkYXRhL2N5YmVyX2F0dGFja19zdGF0aXN0aWNzX3Rlc3RkYXRhXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2Uge1xuXG4gICAgb3Blbl9jeWJlcl9hdHRhY2tfc3RhdGlzdGljcygpIHtcbiAgICAgICAgYnJvd3Nlci5tYXhpbWl6ZVdpbmRvdygpO1xuICAgICAgICByZXR1cm4gYnJvd3Nlci51cmwoUEFHRV9VUkwpO1xuICAgIH1cblxuICAgIHJlbG9hZF9icm93c2VyICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJSZWxvYWQgc2Vzc2lvbiBvZiBicm93c2VyXCIpO1xuICAgICAgICBicm93c2VyLnJlbG9hZCgpO1xuICAgICAgfVxuXG4gICAgd2FpdF9wYWdlX3VwbG9hZCgpe1xuICAgICAgICBicm93c2VyLndhaXRVbnRpbChcbiAgICAgICAgICAgICgpID0+IGJyb3dzZXIuZXhlY3V0ZSgoKSA9PiBkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSksXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpbWVvdXQ6IDYwICogMTAwMCwgXG4gICAgICAgICAgICAgIHRpbWVvdXRNc2c6ICdNZXNzYWdlIG9uIGZhaWx1cmUnXG4gICAgICAgICAgICB9XG4gICAgfVxufVxuIl19","map":{"version":3,"sources":["page.js"],"names":["Page","open_cyber_attack_statistics","browser","maximizeWindow","url","PAGE_URL","reload_browser","console","log","reload","wait_page_upload","waitUntil","execute","document","readyState","timeout","timeoutMsg"],"mappings":";;;;;;;AAAA;;AAEe,MAAMA,IAAN,CAAW;AAEtBC,EAAAA,4BAA4B,GAAG;AAC3BC,IAAAA,OAAO,CAACC,cAAR;AACA,WAAOD,OAAO,CAACE,GAAR,CAAYC,0CAAZ,CAAP;AACH;;AAEDC,EAAAA,cAAc,GAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAN,IAAAA,OAAO,CAACO,MAAR;AACD;;AAEHC,EAAAA,gBAAgB,GAAE;AACdR,IAAAA,OAAO,CAACS,SAAR,CACI,MAAMT,OAAO,CAACU,OAAR,CAAgB,MAAMC,QAAQ,CAACC,UAAT,KAAwB,UAA9C,CADV,GAEI;AACEC,MAAAA,OAAO,EAAE,KAAK,IADhB;AAEEC,MAAAA,UAAU,EAAE;AAFd,KAFJ;AAMH;;AAnBqB","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/","sourcesContent":["import { PAGE_URL } from \"../testdata/cyber_attack_statistics_testdata\";\n\nexport default class Page {\n\n    open_cyber_attack_statistics() {\n        browser.maximizeWindow();\n        return browser.url(PAGE_URL);\n    }\n\n    reload_browser () {\n        console.log(\"Reload session of browser\");\n        browser.reload();\n      }\n\n    wait_page_upload(){\n        browser.waitUntil(\n            () => browser.execute(() => document.readyState === 'complete')),\n            {\n              timeout: 60 * 1000, \n              timeoutMsg: 'Message on failure'\n            }\n    }\n}\n"]}},"mtime":1646314758206},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/main_page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cyber_attack_statistics_testdata = _interopRequireDefault(require(\"../testdata/cyber_attack_statistics_testdata\"));\n\nvar _page = _interopRequireDefault(require(\"./page\"));\n\nvar _jsAbbreviationNumber = require(\"js-abbreviation-number\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass MainPage extends _page.default {\n  get app() {\n    return $('//div[@id=\"app\"]');\n  }\n\n  get filtering() {\n    return $('//div[@class=\"filtering\"]');\n  }\n\n  get filter_input() {\n    return $('//*[@id=\"filter-input\"]');\n  }\n\n  get sorting() {\n    return $('//div[@class=\"sorting\"]');\n  }\n\n  get sort_select() {\n    return $('//select[@id=\"sort-select\"]');\n  }\n\n  get table() {\n    return $('//div[@class=\"table\"]');\n  }\n\n  get table_content() {\n    return $('//div[@class=\"table-content\"]');\n  }\n\n  async get_table_row_elements() {\n    return await \"div.table-content > div.table-row\";\n  }\n\n  async get_table_data_elements() {\n    return await \"div.table-content > div> div.table-data.data-name\";\n  }\n\n  async open_cyber_attack_statistics() {\n    await super.open_cyber_attack_statistics();\n  }\n\n  async reload_browser() {\n    await super.reload_browser();\n  }\n\n  async check_cyber_attack_statistics_page_is_visible() {\n    expect(this.app).toBeDisplayed();\n    expect(this.filtering).toBeDisplayed();\n    expect(this.sorting).toBeDisplayed();\n    expect(this.table).toBeDisplayed();\n    console.log(\"Cyber attack statistics is visible\");\n  }\n\n  async enter_filter_data_value(filter_data) {\n    expect(await this.filter_input).toBeDisplayed();\n    await this.filter_input.setValue(filter_data);\n    console.log(\"Filter data was entered\");\n  }\n\n  async check_filtering_functionality_with_invalid_data() {\n    //use random data for filtering field\n    await this.enter_filter_data_value(_cyber_attack_statistics_testdata.default.RANDOM_DATA);\n    expect(await this.table_content).not.toBeDisplayed(); //check returned table after filtering\n\n    const table_rows = await $$(function () {\n      return this.document.querySelectorAll(this.get_table_row_elements);\n    });\n    await browser.pause(2000); // just to see what's happening on the screen\n\n    expect(table_rows.length).toBe(0, {\n      message: \"Table of statistics is not empty after invalid filtering.\"\n    });\n    console.log(\"Checking filtering functionality with invalid data\");\n  }\n\n  async check_filtering_functionality_with_valid_data() {\n    await browser.waitUntil(async () => ((await this.table_content.isDisplayed) == true, {\n      timeout: 5000,\n      timeoutMsg: 'table_content is not visible before filtering'\n    })); //first data of table, always will return result with filtering, and will check funcitonality of filtering with valid data\n\n    const textToBeUsedForFilter = await $$(function () {\n      return this.document.querySelectorAll(\"div.table-data\");\n    })[0].getText(); //enter filter data with exist value from table (first data of exist table)\n\n    await this.enter_filter_data_value(textToBeUsedForFilter);\n    await browser.waitUntil(async () => ((await this.table_content.isDisplayed) == true, {\n      timeout: 5000,\n      timeoutMsg: 'table_content is not visible after filtering'\n    }));\n    await browser.pause(2000); // just to see what's happening on the screen\n    //check returned table rows, get row text after filtering,  should have filtering text\n\n    const rows = await $$(function () {\n      return this.document.querySelectorAll(this.get_table_row_elements);\n    });\n    rows.forEach(element => {\n      expect(element.getText()).toHaveTextContaining(textToBeUsedForFilter);\n    });\n  }\n\n  async check_sorting_functionality_with_different_sort_data() {\n    //get all options from sorting selection\n    const sort_options = await $$(function () {\n      return this.document.querySelectorAll(\"#sort-select > option\");\n    });\n    let sorting_check = await []; //try all the options that received (in sort_options) one by one.\n\n    for (var i = 0; i < sort_options.length; i++) {\n      this.reload_browser();\n      const selected_sort_value = await sort_options[i].getValue();\n      const selected_sort_text = await sort_options[i].getText();\n      await this.sort_select.selectByAttribute('value', await selected_sort_value);\n      await browser.pause(2000); // just to see what's happening on the screen\n\n      console.log((await selected_sort_value) + \": Selected for sorting\");\n      await sorting_check.push(await this.check_sorting_is_true(selected_sort_text));\n    }\n\n    return sorting_check;\n  }\n\n  async check_sorting_is_true(selected_sort_value) {\n    //get the column names that will be affected by the sorting\n    const header_colon_items = await $$(function () {\n      return this.document.querySelectorAll(\"div.header__item\");\n    });\n    const table_rows = await $$(function () {\n      return this.document.querySelectorAll(\"div.table-row\");\n    });\n    let sorted_colon_element_list = await [];\n    let sorted_colon_index = -1; //find out which column is affected by sort and add this colon elements to list\n\n    for (var i = 0; i < header_colon_items.length; i++) {\n      const lower_case_header_name = (await header_colon_items[i].getText()).toLowerCase();\n\n      if (await lower_case_header_name.includes(selected_sort_value.toLowerCase())) {\n        sorted_colon_index = i;\n        break;\n      }\n    }\n\n    for (var i = 0; i < table_rows.length; i++) {\n      let sorted_element_value = await $$(function () {\n        return this.document.querySelectorAll(\"div.table-row\");\n      })[i].$$(\"div.table-data\")[sorted_colon_index].getText();\n      await sorted_colon_element_list.push(sorted_element_value);\n    }\n\n    return await this.check_order_of_table_values_according_to_rules(sorted_colon_element_list);\n  }\n\n  async check_order_of_table_values_according_to_rules(sorted_colon_element_list) {\n    switch (true) {\n      case sorted_colon_element_list.includes('low', 'medium', 'high'):\n        return this.check_sorting_of_complexity(sorted_colon_element_list);\n\n      case sorted_colon_element_list.includes('K', 'k', 'm', 'M', 'b', 'B') && sorted_colon_element_list.includes('1', '2', '3', '4', '5', '6', '7', '8', '9', '0'):\n        return this.check_sorting_of_number_of_cases(this.sorted_colon_element_list);\n\n      default:\n        return this.check_sorting_of_string_or_number(sorted_colon_element_list);\n    }\n  }\n\n  async check_sorting_of_complexity(sorted_colon_element_list) {\n    const complexityArray = [\"high\", \"medium\", \"low\"];\n    let complexity_check = true;\n    sorted_colon_element_list.forEach((element, index, arr) => {\n      if (index + 1 < arr.length) {\n        const first_element_complextiy = complexityArray.indexOf(element);\n        const second_element_omplexity = complexityArray.indexOf(arr[index + 1]);\n        const check_complexity = second_element_omplexity - first_element_complextiy; // for same complexty low-low, high-high, medium-medum difference should be 0, low-high, low-medium etc. difference >0, if difference <0 thats meaning sorting is  not true\n\n        if (check_complexity < 0) complexity_check = false;\n      }\n    });\n    return complexity_check;\n  }\n\n  async check_sorting_of_string_or_number(sorted_colon_element_list) {\n    if (sorted_colon_element_list.sort() == sorted_colon_element_list) {\n      return true;\n    } else return false;\n  }\n\n  async check_sorting_of_number_of_cases(sorted_colon_element_list) {\n    let list = [];\n    sorted_colon_element_list.forEach((element, index, arr) => {\n      const num = (0, _jsAbbreviationNumber.unabbreviateNumber)(element.getText());\n      list[index] = num;\n    });\n\n    if (list.sort().toEqual) {\n      return true;\n    } else return false;\n  }\n\n  async assert(condition, message) {\n    if (!condition) {\n      try {\n        throw new Error(message);\n      } catch (e) {\n        return console.error(e);\n      }\n    }\n  }\n\n}\n\nvar _default = new MainPage();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW5fcGFnZS5qcyJdLCJuYW1lcyI6WyJNYWluUGFnZSIsIlBhZ2UiLCJhcHAiLCIkIiwiZmlsdGVyaW5nIiwiZmlsdGVyX2lucHV0Iiwic29ydGluZyIsInNvcnRfc2VsZWN0IiwidGFibGUiLCJ0YWJsZV9jb250ZW50IiwiZ2V0X3RhYmxlX3Jvd19lbGVtZW50cyIsImdldF90YWJsZV9kYXRhX2VsZW1lbnRzIiwib3Blbl9jeWJlcl9hdHRhY2tfc3RhdGlzdGljcyIsInJlbG9hZF9icm93c2VyIiwiY2hlY2tfY3liZXJfYXR0YWNrX3N0YXRpc3RpY3NfcGFnZV9pc192aXNpYmxlIiwiZXhwZWN0IiwidG9CZURpc3BsYXllZCIsImNvbnNvbGUiLCJsb2ciLCJlbnRlcl9maWx0ZXJfZGF0YV92YWx1ZSIsImZpbHRlcl9kYXRhIiwic2V0VmFsdWUiLCJjaGVja19maWx0ZXJpbmdfZnVuY3Rpb25hbGl0eV93aXRoX2ludmFsaWRfZGF0YSIsInRlc3RfZGF0YSIsIlJBTkRPTV9EQVRBIiwibm90IiwidGFibGVfcm93cyIsIiQkIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnJvd3NlciIsInBhdXNlIiwibGVuZ3RoIiwidG9CZSIsIm1lc3NhZ2UiLCJjaGVja19maWx0ZXJpbmdfZnVuY3Rpb25hbGl0eV93aXRoX3ZhbGlkX2RhdGEiLCJ3YWl0VW50aWwiLCJpc0Rpc3BsYXllZCIsInRpbWVvdXQiLCJ0aW1lb3V0TXNnIiwidGV4dFRvQmVVc2VkRm9yRmlsdGVyIiwiZ2V0VGV4dCIsInJvd3MiLCJmb3JFYWNoIiwiZWxlbWVudCIsInRvSGF2ZVRleHRDb250YWluaW5nIiwiY2hlY2tfc29ydGluZ19mdW5jdGlvbmFsaXR5X3dpdGhfZGlmZmVyZW50X3NvcnRfZGF0YSIsInNvcnRfb3B0aW9ucyIsInNvcnRpbmdfY2hlY2siLCJpIiwic2VsZWN0ZWRfc29ydF92YWx1ZSIsImdldFZhbHVlIiwic2VsZWN0ZWRfc29ydF90ZXh0Iiwic2VsZWN0QnlBdHRyaWJ1dGUiLCJwdXNoIiwiY2hlY2tfc29ydGluZ19pc190cnVlIiwiaGVhZGVyX2NvbG9uX2l0ZW1zIiwic29ydGVkX2NvbG9uX2VsZW1lbnRfbGlzdCIsInNvcnRlZF9jb2xvbl9pbmRleCIsImxvd2VyX2Nhc2VfaGVhZGVyX25hbWUiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwic29ydGVkX2VsZW1lbnRfdmFsdWUiLCJjaGVja19vcmRlcl9vZl90YWJsZV92YWx1ZXNfYWNjb3JkaW5nX3RvX3J1bGVzIiwiY2hlY2tfc29ydGluZ19vZl9jb21wbGV4aXR5IiwiY2hlY2tfc29ydGluZ19vZl9udW1iZXJfb2ZfY2FzZXMiLCJjaGVja19zb3J0aW5nX29mX3N0cmluZ19vcl9udW1iZXIiLCJjb21wbGV4aXR5QXJyYXkiLCJjb21wbGV4aXR5X2NoZWNrIiwiaW5kZXgiLCJhcnIiLCJmaXJzdF9lbGVtZW50X2NvbXBsZXh0aXkiLCJpbmRleE9mIiwic2Vjb25kX2VsZW1lbnRfb21wbGV4aXR5IiwiY2hlY2tfY29tcGxleGl0eSIsInNvcnQiLCJsaXN0IiwibnVtIiwidG9FcXVhbCIsImFzc2VydCIsImNvbmRpdGlvbiIsIkVycm9yIiwiZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxRQUFOLFNBQXVCQyxhQUF2QixDQUE0QjtBQUVqQixNQUFIQyxHQUFHLEdBQUc7QUFBRSxXQUFPQyxDQUFDLENBQUMsa0JBQUQsQ0FBUjtBQUErQjs7QUFDOUIsTUFBVEMsU0FBUyxHQUFHO0FBQUUsV0FBT0QsQ0FBQyxDQUFDLDJCQUFELENBQVI7QUFBd0M7O0FBQzFDLE1BQVpFLFlBQVksR0FBRztBQUFFLFdBQU9GLENBQUMsQ0FBQyx5QkFBRCxDQUFSO0FBQXNDOztBQUNoRCxNQUFQRyxPQUFPLEdBQUc7QUFBRSxXQUFPSCxDQUFDLENBQUMseUJBQUQsQ0FBUjtBQUFzQzs7QUFDdkMsTUFBWEksV0FBVyxHQUFHO0FBQUUsV0FBT0osQ0FBQyxDQUFD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QUFFQW1DLE1BQUFBLElBQUksQ0FBQ1AsS0FBRCxDQUFKLEdBQWNRLEdBQWQ7QUFDSCxLQUxEOztBQU9BLFFBQUdELElBQUksQ0FBQ0QsSUFBTCxHQUFZRyxPQUFmLEVBQXVCO0FBQ25CLGFBQU8sSUFBUDtBQUNILEtBRkQsTUFHSSxPQUFPLEtBQVA7QUFDVDs7QUFFYSxRQUFOQyxNQUFNLENBQUNDLFNBQUQsRUFBWTlDLE9BQVosRUFBcUI7QUFDN0IsUUFBSSxDQUFDOEMsU0FBTCxFQUFnQjtBQUNaLFVBQUk7QUFDQSxjQUFNLElBQUlDLEtBQUosQ0FBVS9DLE9BQVYsQ0FBTjtBQUNILE9BRkQsQ0FFRSxPQUFNZ0QsQ0FBTixFQUFTO0FBQ1AsZUFBT2pFLE9BQU8sQ0FBQ2tFLEtBQVIsQ0FBY0QsQ0FBZCxDQUFQO0FBRUg7QUFDSjtBQUNSOztBQXJPMkI7O2VBdU9aLElBQUlsRixRQUFKLEUiLCJzb3VyY2VSb290IjoiL1VzZXJzL2thZGVyL0lkZWFQcm9qZWN0cy9FY2xlY3RpY0lRX3Rlc3RfYXV0b21hdGlvbi9zcmMvcGFnZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRlc3RfZGF0YSBmcm9tICcuLi90ZXN0ZGF0YS9jeWJlcl9hdHRhY2tfc3RhdGlzdGljc190ZXN0ZGF0YSc7XG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2UnO1xuaW1wb3J0IHsgdW5hYmJyZXZpYXRlTnVtYmVyIH0gZnJvbSBcImpzLWFiYnJldmlhdGlvbi1udW1iZXJcIjtcblxuY2xhc3MgTWFpblBhZ2UgZXh0ZW5kcyBQYWdlIHtcblxuICAgIGdldCBhcHAoKSB7IHJldHVybiAkKCcvL2RpdltAaWQ9XCJhcHBcIl0nKTsgfVxuICAgIGdldCBmaWx0ZXJpbmcoKSB7IHJldHVybiAkKCcvL2RpdltAY2xhc3M9XCJmaWx0ZXJpbmdcIl0nKTsgfVxuICAgIGdldCBmaWx0ZXJfaW5wdXQoKSB7IHJldHVybiAkKCcvLypbQGlkPVwiZmlsdGVyLWlucHV0XCJdJyk7IH1cbiAgICBnZXQgc29ydGluZygpIHsgcmV0dXJuICQoJy8vZGl2W0BjbGFzcz1cInNvcnRpbmdcIl0nKTsgfVxuICAgIGdldCBzb3J0X3NlbGVjdCgpIHsgcmV0dXJuICQoJy8vc2VsZWN0W0BpZD1cInNvcnQtc2VsZWN0XCJdJyk7IH1cbiAgICBnZXQgdGFibGUoKSB7IHJldHVybiAkKCcvL2RpdltAY2xhc3M9XCJ0YWJsZVwiXScpOyB9XG4gICAgZ2V0IHRhYmxlX2NvbnRlbnQoKSB7IHJldHVybiAkKCcvL2RpdltAY2xhc3M9XCJ0YWJsZS1jb250ZW50XCJdJyk7IH1cblxuICAgIGFzeW5jIGdldF90YWJsZV9yb3dfZWxlbWVudHMoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCAoXCJkaXYudGFibGUtY29udGVudCA+IGRpdi50YWJsZS1yb3dcIik7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0X3RhYmxlX2RhdGFfZWxlbWVudHMoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCAoXCJkaXYudGFibGUtY29udGVudCA+IGRpdj4gZGl2LnRhYmxlLWRhdGEuZGF0YS1uYW1lXCIpO1xuICAgIH1cblxuICAgIGFzeW5jIG9wZW5fY3liZXJfYXR0YWNrX3N0YXRpc3RpY3MoKSB7XG4gICAgICAgIGF3YWl0IHN1cGVyLm9wZW5fY3liZXJfYXR0YWNrX3N0YXRpc3RpY3MoKTtcbiAgICB9XG5cbiAgICBhc3luYyByZWxvYWRfYnJvd3NlcigpIHtcbiAgICAgICAgYXdhaXQgc3VwZXIucmVsb2FkX2Jyb3dzZXIoKTtcbiAgICB9XG5cbiAgICBhc3luYyBjaGVja19jeWJlcl9hdHRhY2tfc3RhdGlzdGljc19wYWdlX2lzX3Zpc2libGUgKCkge1xuICAgICAgICBcbiAgICAgICAgZXhwZWN0KHRoaXMuYXBwKS50b0JlRGlzcGxheWVkKCk7XG5cbiAgICAgICAgZXhwZWN0KHRoaXMuZmlsdGVyaW5nKS50b0JlRGlzcGxheWVkKCk7XG5cbiAgICAgICAgZXhwZWN0KHRoaXMuc29ydGluZykudG9CZURpc3BsYXllZCgpO1xuXG4gICAgICAgIGV4cGVjdCh0aGlzLnRhYmxlKS50b0JlRGlzcGxheWVkKCk7XG5cbiAgICAgICAgY29uc29sZS5sb2coXCJDeWJlciBhdHRhY2sgc3RhdGlzdGljcyBpcyB2aXNpYmxlXCIpO1xuICAgIH1cbiAgICBcbiAgICBhc3luYyBlbnRlcl9maWx0ZXJfZGF0YV92YWx1ZShmaWx0ZXJfZGF0YSkge1xuICAgICAgICBleHBlY3QoIGF3YWl0IHRoaXMuZmlsdGVyX2lucHV0KS50b0JlRGlzcGxheWVkKCk7XG4gICAgICAgIGF3YWl0IHRoaXMuZmlsdGVyX2lucHV0LnNldFZhbHVlKGZpbHRlcl9kYXRhKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRmlsdGVyIGRhdGEgd2FzIGVudGVyZWRcIik7XG4gICAgfVxuICAgIFxuICAgIGFzeW5jIGNoZWNrX2ZpbHRlcmluZ19mdW5jdGlvbmFsaXR5X3dpdGhfaW52YWxpZF9kYXRhKCkge1xuXG4gICAgICAgIC8vdXNlIHJhbmRvbSBkYXRhIGZvciBmaWx0ZXJpbmcgZmllbGRcbiAgICAgICAgYXdhaXQgdGhpcy5lbnRlcl9maWx0ZXJfZGF0YV92YWx1ZSh0ZXN0X2RhdGEuUkFORE9NX0RBVEEpO1xuICAgICAgICBleHBlY3QoYXdhaXQgdGhpcy50YWJsZV9jb250ZW50KS5ub3QudG9CZURpc3BsYXllZCgpO1xuXG4gICAgICAgLy9jaGVjayByZXR1cm5lZCB0YWJsZSBhZnRlciBmaWx0ZXJpbmdcbiAgICAgICBjb25zdCB0YWJsZV9yb3dzID0gYXdhaXQgJCQoZnVuY3Rpb24oKSB7IFxuICAgICAgICAgICByZXR1cm4gdGhpcy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuZ2V0X3RhYmxlX3Jvd19lbGVtZW50cyk7XG4gICAgICAgfSk7XG5cbiAgICAgICBhd2FpdCBicm93c2VyLnBhdXNlKDIwMDApLy8ganVzdCB0byBzZWUgd2hhdCdzIGhhcHBlbmluZyBvbiB0aGUgc2NyZWVuXG5cbiAgICAgICAgZXhwZWN0KHRhYmxlX3Jvd3MubGVuZ3RoKS50b0JlKDAsIHsgbWVzc2FnZTogXCJUYWJsZSBvZiBzdGF0aXN0aWNzIGlzIG5vdCBlbXB0eSBhZnRlciBpbnZhbGlkIGZpbHRlcmluZy5cIn0pO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ2hlY2tpbmcgZmlsdGVyaW5nIGZ1bmN0aW9uYWxpdHkgd2l0aCBpbnZhbGlkIGRhdGFcIik7XG4gICAgfVxuXG5cbiAgICBhc3luYyBjaGVja19maWx0ZXJpbmdfZnVuY3Rpb25hbGl0eV93aXRoX3ZhbGlkX2RhdGEoKSB7XG5cbiAgICAgICAgYXdhaXQgYnJvd3Nlci53YWl0VW50aWwoXG4gICAgICAgICAgICBhc3luYyAoKSA9PiAoYXdhaXQgdGhpcy50YWJsZV9jb250ZW50LmlzRGlzcGxheWVkID09IHRydWUsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGltZW91dDogNTAwMCxcbiAgICAgICAgICAgICAgICB0aW1lb3V0TXNnOiAndGFibGVfY29udGVudCBpcyBub3QgdmlzaWJsZSBiZWZvcmUgZmlsdGVyaW5nJ1xuICAgICAgICB9KSk7XG5cbiAgICAgICAgLy9maXJzdCBkYXRhIG9mIHRhYmxlLCBhbHdheXMgd2lsbCByZXR1cm4gcmVzdWx0IHdpdGggZmlsdGVyaW5nLCBhbmQgd2lsbCBjaGVjayBmdW5jaXRvbmFsaXR5IG9mIGZpbHRlcmluZyB3aXRoIHZhbGlkIGRhdGFcbiAgICAgICAgY29uc3QgdGV4dFRvQmVVc2VkRm9yRmlsdGVyID0gYXdhaXQgJCQoZnVuY3Rpb24oKSB7IFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImRpdi50YWJsZS1kYXRhXCIpOyBcbiAgICAgICAgfSlbMF0uZ2V0VGV4dCgpO1xuXG4gICAgICAgIC8vZW50ZXIgZmlsdGVyIGRhdGEgd2l0aCBleGlzdCB2YWx1ZSBmcm9tIHRhYmxlIChmaXJzdCBkYXRhIG9mIGV4aXN0IHRhYmxlKVxuICAgICAgICBhd2FpdCB0aGlzLmVudGVyX2ZpbHRlcl9kYXRhX3ZhbHVlKHRleHRUb0JlVXNlZEZvckZpbHRlcik7IFxuICAgICAgICBhd2FpdCBicm93c2VyLndhaXRVbnRpbChcbiAgICAgICAgICAgIGFzeW5jICgpID0+IChhd2FpdCB0aGlzLnRhYmxlX2NvbnRlbnQuaXNEaXNwbGF5ZWQgPT0gdHJ1ZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aW1lb3V0OiA1MDAwLFxuICAgICAgICAgICAgICAgIHRpbWVvdXRNc2c6ICd0YWJsZV9jb250ZW50IGlzIG5vdCB2aXNpYmxlIGFmdGVyIGZpbHRlcmluZydcbiAgICAgICAgfSkpO1xuICAgICAgICBhd2FpdCBicm93c2VyLnBhdXNlKDIwMDApLy8ganVzdCB0byBzZWUgd2hhdCdzIGhhcHBlbmluZyBvbiB0aGUgc2NyZWVuXG5cbiAgICAgICAvL2NoZWNrIHJldHVybmVkIHRhYmxlIHJvd3MsIGdldCByb3cgdGV4dCBhZnRlciBmaWx0ZXJpbmcsICBzaG91bGQgaGF2ZSBmaWx0ZXJpbmcgdGV4dFxuICAgICAgIGNvbnN0IHJvd3MgPSBhd2FpdCAkJChmdW5jdGlvbigpIHsgXG4gICAgICAgIHJldHVybiB0aGlzLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5nZXRfdGFibGVfcm93X2VsZW1lbnRzKTtcbiAgICAgICB9KTtcbiAgICAgICAgcm93cy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoZWxlbWVudC5nZXRUZXh0KCkpLnRvSGF2ZVRleHRDb250YWluaW5nKHRleHRUb0JlVXNlZEZvckZpbHRlcik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgYXN5bmMgY2hlY2tfc29ydGluZ19mdW5jdGlvbmFsaXR5X3dpdGhfZGlmZmVyZW50X3NvcnRfZGF0YSgpIHtcbiAgICAgICAgLy9nZXQgYWxsIG9wdGlvbnMgZnJvbSBzb3J0aW5nIHNlbGVjdGlvblxuICAgICAgICBjb25zdCBzb3J0X29wdGlvbnMgPSBhd2FpdCAkJChmdW5jdGlvbigpIHsgXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3NvcnQtc2VsZWN0ID4gb3B0aW9uXCIpOyBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IHNvcnRpbmdfY2hlY2sgPSBhd2FpdCBbXTtcblxuICAgICAgICAvL3RyeSBhbGwgdGhlIG9wdGlvbnMgdGhhdCByZWNlaXZlZCAoaW4gc29ydF9vcHRpb25zKSBvbmUgYnkgb25lLlxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvcnRfb3B0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5yZWxvYWRfYnJvd3NlcigpO1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRfc29ydF92YWx1ZSA9IGF3YWl0IHNvcnRfb3B0aW9uc1tpXS5nZXRWYWx1ZSgpO1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRfc29ydF90ZXh0ID0gYXdhaXQgc29ydF9vcHRpb25zW2ldLmdldFRleHQoKTtcblxuICAgICAgICAgICAgYXdhaXQgdGhpcy5zb3J0X3NlbGVjdC5zZWxlY3RCeUF0dHJpYnV0ZSgndmFsdWUnLCBhd2FpdCBzZWxlY3RlZF9zb3J0X3ZhbHVlKTtcblxuICAgICAgICAgICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKS8vIGp1c3QgdG8gc2VlIHdoYXQncyBoYXBwZW5pbmcgb24gdGhlIHNjcmVlblxuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhhd2FpdCBzZWxlY3RlZF9zb3J0X3ZhbHVlICsgXCI6IFNlbGVjdGVkIGZvciBzb3J0aW5nXCIpOyBcblxuICAgICAgICAgICAgYXdhaXQgc29ydGluZ19jaGVjay5wdXNoKGF3YWl0IHRoaXMuY2hlY2tfc29ydGluZ19pc190cnVlKHNlbGVjdGVkX3NvcnRfdGV4dCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNvcnRpbmdfY2hlY2s7XG4gICAgfVxuXG4gICAgYXN5bmMgY2hlY2tfc29ydGluZ19pc190cnVlKHNlbGVjdGVkX3NvcnRfdmFsdWUpIHtcbiAgICAgICAgXG4gICAgICAgIC8vZ2V0IHRoZSBjb2x1bW4gbmFtZXMgdGhhdCB3aWxsIGJlIGFmZmVjdGVkIGJ5IHRoZSBzb3J0aW5nXG4gICAgICAgIGNvbnN0IGhlYWRlcl9jb2xvbl9pdGVtcyA9IGF3YWl0ICQkKGZ1bmN0aW9uKCkgeyBcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJkaXYuaGVhZGVyX19pdGVtXCIpOyBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgdGFibGVfcm93cyA9IGF3YWl0ICQkKGZ1bmN0aW9uKCkgeyBcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJkaXYudGFibGUtcm93XCIpOyBcbiAgICAgICAgfSk7XG5cblxuICAgICAgICBsZXQgc29ydGVkX2NvbG9uX2VsZW1lbnRfbGlzdCA9IGF3YWl0IFtdO1xuICAgICAgICBsZXQgc29ydGVkX2NvbG9uX2luZGV4PSAtMTtcblxuICAgICAgICAvL2ZpbmQgb3V0IHdoaWNoIGNvbHVtbiBpcyBhZmZlY3RlZCBieSBzb3J0IGFuZCBhZGQgdGhpcyBjb2xvbiBlbGVtZW50cyB0byBsaXN0XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhZGVyX2NvbG9uX2l0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBsb3dlcl9jYXNlX2hlYWRlcl9uYW1lID0gKGF3YWl0IGhlYWRlcl9jb2xvbl9pdGVtc1tpXS5nZXRUZXh0KCkpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBpZihhd2FpdCBsb3dlcl9jYXNlX2hlYWRlcl9uYW1lLmluY2x1ZGVzKHNlbGVjdGVkX3NvcnRfdmFsdWUudG9Mb3dlckNhc2UoKSkpe1xuICAgICAgICAgICAgICAgIHNvcnRlZF9jb2xvbl9pbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YWJsZV9yb3dzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCBzb3J0ZWRfZWxlbWVudF92YWx1ZSA9IGF3YWl0ICQkKGZ1bmN0aW9uKCkgeyBcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiZGl2LnRhYmxlLXJvd1wiKTsgXG4gICAgICAgICAgICB9KVtpXS4kJChcImRpdi50YWJsZS1kYXRhXCIpW3NvcnRlZF9jb2xvbl9pbmRleF0uZ2V0VGV4dCgpO1xuXG4gICAgICAgICAgICBhd2FpdCBzb3J0ZWRfY29sb25fZWxlbWVudF9saXN0LnB1c2goc29ydGVkX2VsZW1lbnRfdmFsdWUpOyBcblxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuY2hlY2tfb3JkZXJfb2ZfdGFibGVfdmFsdWVzX2FjY29yZGluZ190b19ydWxlcyhzb3J0ZWRfY29sb25fZWxlbWVudF9saXN0KTtcblxuICAgIH0gXG5cbiAgICBhc3luYyBjaGVja19vcmRlcl9vZl90YWJsZV92YWx1ZXNfYWNjb3JkaW5nX3RvX3J1bGVzKHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QpIHtcblxuICAgICAgICBzd2l0Y2godHJ1ZSkge1xuXG4gICAgICAgICAgICBjYXNlIHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QuaW5jbHVkZXMoJ2xvdycsJ21lZGl1bScsJ2hpZ2gnKTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGVja19zb3J0aW5nX29mX2NvbXBsZXhpdHkoc29ydGVkX2NvbG9uX2VsZW1lbnRfbGlzdCk7XG4gICAgICAgICAgICBjYXNlIHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QuaW5jbHVkZXMoJ0snLCdrJywnbScsJ00nLCdiJywnQicpICYmIHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QuaW5jbHVkZXMoJzEnLCcyJywnMycsJzQnLCc1JywnNicsJzcnLCc4JywnOScsJzAnKTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGVja19zb3J0aW5nX29mX251bWJlcl9vZl9jYXNlcyh0aGlzLnNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGVja19zb3J0aW5nX29mX3N0cmluZ19vcl9udW1iZXIoc29ydGVkX2NvbG9uX2VsZW1lbnRfbGlzdCk7XG4gICAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGNoZWNrX3NvcnRpbmdfb2ZfY29tcGxleGl0eShzb3J0ZWRfY29sb25fZWxlbWVudF9saXN0KSB7XG4gICAgXG5cbiAgICAgICAgICAgY29uc3QgY29tcGxleGl0eUFycmF5ID0gW1wiaGlnaFwiICwgXCJtZWRpdW1cIiwgXCJsb3dcIl1cbiAgICAgICAgICAgbGV0IGNvbXBsZXhpdHlfY2hlY2sgPSB0cnVlO1xuXG4gICAgICAgICAgIHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgsIGFycikgPT4ge1xuXG4gICAgICAgICAgICBpZihpbmRleCsxIDwgYXJyLmxlbmd0aCl7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlyc3RfZWxlbWVudF9jb21wbGV4dGl5ID0gY29tcGxleGl0eUFycmF5LmluZGV4T2YoZWxlbWVudCk7IFxuICAgICAgICAgICAgICAgIGNvbnN0IHNlY29uZF9lbGVtZW50X29tcGxleGl0eSA9IGNvbXBsZXhpdHlBcnJheS5pbmRleE9mKGFycltpbmRleCsxXSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBjaGVja19jb21wbGV4aXR5ID0gIHNlY29uZF9lbGVtZW50X29tcGxleGl0eSAtIGZpcnN0X2VsZW1lbnRfY29tcGxleHRpeTsgLy8gZm9yIHNhbWUgY29tcGxleHR5IGxvdy1sb3csIGhpZ2gtaGlnaCwgbWVkaXVtLW1lZHVtIGRpZmZlcmVuY2Ugc2hvdWxkIGJlIDAsIGxvdy1oaWdoLCBsb3ctbWVkaXVtIGV0Yy4gZGlmZmVyZW5jZSA+MCwgaWYgZGlmZmVyZW5jZSA8MCB0aGF0cyBtZWFuaW5nIHNvcnRpbmcgaXMgIG5vdCB0cnVlXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYoY2hlY2tfY29tcGxleGl0eTwwKVxuICAgICAgICAgICAgICAgICAgIGNvbXBsZXhpdHlfY2hlY2sgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgfSk7XG4gICAgICAgICAgIHJldHVybiBjb21wbGV4aXR5X2NoZWNrO1xuICAgfVxuXG4gICBhc3luYyBjaGVja19zb3J0aW5nX29mX3N0cmluZ19vcl9udW1iZXIoc29ydGVkX2NvbG9uX2VsZW1lbnRfbGlzdCkge1xuXG4gICAgICAgIGlmKHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3Quc29ydCgpID09IHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3Qpe1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1lbHNlXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICB9ICAgXG5cbiAgICBhc3luYyBjaGVja19zb3J0aW5nX29mX251bWJlcl9vZl9jYXNlcyhzb3J0ZWRfY29sb25fZWxlbWVudF9saXN0KSB7XG4gICAgXG4gICAgICAgIGxldCBsaXN0ID0gW107XG4gICAgICAgIHNvcnRlZF9jb2xvbl9lbGVtZW50X2xpc3QuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgsIGFycikgPT4ge1xuXG4gICAgICAgICAgICBjb25zdCBudW0gPSB1bmFiYnJldmlhdGVOdW1iZXIoZWxlbWVudC5nZXRUZXh0KCkpO1xuXG4gICAgICAgICAgICBsaXN0W2luZGV4XSA9IG51bTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYobGlzdC5zb3J0KCkudG9FcXVhbCl7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfWVsc2VcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgfSBcblxuICAgIGFzeW5jIGFzc2VydChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxufVxufSBcbiBleHBvcnQgZGVmYXVsdCBuZXcgTWFpblBhZ2UoKTtcbiJdfQ==","map":{"version":3,"sources":["main_page.js"],"names":["MainPage","Page","app","$","filtering","filter_input","sorting","sort_select","table","table_content","get_table_row_elements","get_table_data_elements","open_cyber_attack_statistics","reload_browser","check_cyber_attack_statistics_page_is_visible","expect","toBeDisplayed","console","log","enter_filter_data_value","filter_data","setValue","check_filtering_functionality_with_invalid_data","test_data","RANDOM_DATA","not","table_rows","$$","document","querySelectorAll","browser","pause","length","toBe","message","check_filtering_functionality_with_valid_data","waitUntil","isDisplayed","timeout","timeoutMsg","textToBeUsedForFilter","getText","rows","forEach","element","toHaveTextContaining","check_sorting_functionality_with_different_sort_data","sort_options","sorting_check","i","selected_sort_value","getValue","selected_sort_text","selectByAttribute","push","check_sorting_is_true","header_colon_items","sorted_colon_element_list","sorted_colon_index","lower_case_header_name","toLowerCase","includes","sorted_element_value","check_order_of_table_values_according_to_rules","check_sorting_of_complexity","check_sorting_of_number_of_cases","check_sorting_of_string_or_number","complexityArray","complexity_check","index","arr","first_element_complextiy","indexOf","second_element_omplexity","check_complexity","sort","list","num","toEqual","assert","condition","Error","e","error"],"mappings":"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","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/","sourcesContent":["import test_data from '../testdata/cyber_attack_statistics_testdata';\nimport Page from './page';\nimport { unabbreviateNumber } from \"js-abbreviation-number\";\n\nclass MainPage extends Page {\n\n    get app() { return $('//div[@id=\"app\"]'); }\n    get filtering() { return $('//div[@class=\"filtering\"]'); }\n    get filter_input() { return $('//*[@id=\"filter-input\"]'); }\n    get sorting() { return $('//div[@class=\"sorting\"]'); }\n    get sort_select() { return $('//select[@id=\"sort-select\"]'); }\n    get table() { return $('//div[@class=\"table\"]'); }\n    get table_content() { return $('//div[@class=\"table-content\"]'); }\n\n    async get_table_row_elements() {\n        return await (\"div.table-content > div.table-row\");\n    }\n\n    async get_table_data_elements() {\n        return await (\"div.table-content > div> div.table-data.data-name\");\n    }\n\n    async open_cyber_attack_statistics() {\n        await super.open_cyber_attack_statistics();\n    }\n\n    async reload_browser() {\n        await super.reload_browser();\n    }\n\n    async check_cyber_attack_statistics_page_is_visible () {\n        \n        expect(this.app).toBeDisplayed();\n\n        expect(this.filtering).toBeDisplayed();\n\n        expect(this.sorting).toBeDisplayed();\n\n        expect(this.table).toBeDisplayed();\n\n        console.log(\"Cyber attack statistics is visible\");\n    }\n    \n    async enter_filter_data_value(filter_data) {\n        expect( await this.filter_input).toBeDisplayed();\n        await this.filter_input.setValue(filter_data);\n        \n        console.log(\"Filter data was entered\");\n    }\n    \n    async check_filtering_functionality_with_invalid_data() {\n\n        //use random data for filtering field\n        await this.enter_filter_data_value(test_data.RANDOM_DATA);\n        expect(await this.table_content).not.toBeDisplayed();\n\n       //check returned table after filtering\n       const table_rows = await $$(function() { \n           return this.document.querySelectorAll(this.get_table_row_elements);\n       });\n\n       await browser.pause(2000)// just to see what's happening on the screen\n\n        expect(table_rows.length).toBe(0, { message: \"Table of statistics is not empty after invalid filtering.\"});\n\n        console.log(\"Checking filtering functionality with invalid data\");\n    }\n\n\n    async check_filtering_functionality_with_valid_data() {\n\n        await browser.waitUntil(\n            async () => (await this.table_content.isDisplayed == true,\n            {\n                timeout: 5000,\n                timeoutMsg: 'table_content is not visible before filtering'\n        }));\n\n        //first data of table, always will return result with filtering, and will check funcitonality of filtering with valid data\n        const textToBeUsedForFilter = await $$(function() { \n            return this.document.querySelectorAll(\"div.table-data\"); \n        })[0].getText();\n\n        //enter filter data with exist value from table (first data of exist table)\n        await this.enter_filter_data_value(textToBeUsedForFilter); \n        await browser.waitUntil(\n            async () => (await this.table_content.isDisplayed == true,\n            {\n                timeout: 5000,\n                timeoutMsg: 'table_content is not visible after filtering'\n        }));\n        await browser.pause(2000)// just to see what's happening on the screen\n\n       //check returned table rows, get row text after filtering,  should have filtering text\n       const rows = await $$(function() { \n        return this.document.querySelectorAll(this.get_table_row_elements);\n       });\n        rows.forEach((element) => {\n            expect(element.getText()).toHaveTextContaining(textToBeUsedForFilter);\n        });\n    }\n\n\n    async check_sorting_functionality_with_different_sort_data() {\n        //get all options from sorting selection\n        const sort_options = await $$(function() { \n            return this.document.querySelectorAll(\"#sort-select > option\"); \n        });\n\n        let sorting_check = await [];\n\n        //try all the options that received (in sort_options) one by one.\n        for (var i = 0; i < sort_options.length; i++) {\n            this.reload_browser();\n            const selected_sort_value = await sort_options[i].getValue();\n            const selected_sort_text = await sort_options[i].getText();\n\n            await this.sort_select.selectByAttribute('value', await selected_sort_value);\n\n            await browser.pause(2000)// just to see what's happening on the screen\n\n            console.log(await selected_sort_value + \": Selected for sorting\"); \n\n            await sorting_check.push(await this.check_sorting_is_true(selected_sort_text));\n        }\n\n        return sorting_check;\n    }\n\n    async check_sorting_is_true(selected_sort_value) {\n        \n        //get the column names that will be affected by the sorting\n        const header_colon_items = await $$(function() { \n            return this.document.querySelectorAll(\"div.header__item\"); \n        });\n\n        const table_rows = await $$(function() { \n            return this.document.querySelectorAll(\"div.table-row\"); \n        });\n\n\n        let sorted_colon_element_list = await [];\n        let sorted_colon_index= -1;\n\n        //find out which column is affected by sort and add this colon elements to list\n        for (var i = 0; i < header_colon_items.length; i++) {\n            const lower_case_header_name = (await header_colon_items[i].getText()).toLowerCase();\n            if(await lower_case_header_name.includes(selected_sort_value.toLowerCase())){\n                sorted_colon_index = i;\n                break;\n            }\n        }\n        for (var i = 0; i < table_rows.length; i++) {\n            \n            let sorted_element_value = await $$(function() { \n                return this.document.querySelectorAll(\"div.table-row\"); \n            })[i].$$(\"div.table-data\")[sorted_colon_index].getText();\n\n            await sorted_colon_element_list.push(sorted_element_value); \n\n        }\n\n        return await this.check_order_of_table_values_according_to_rules(sorted_colon_element_list);\n\n    } \n\n    async check_order_of_table_values_according_to_rules(sorted_colon_element_list) {\n\n        switch(true) {\n\n            case sorted_colon_element_list.includes('low','medium','high'):\n                return this.check_sorting_of_complexity(sorted_colon_element_list);\n            case sorted_colon_element_list.includes('K','k','m','M','b','B') && sorted_colon_element_list.includes('1','2','3','4','5','6','7','8','9','0'):\n                return this.check_sorting_of_number_of_cases(this.sorted_colon_element_list);\n            default:\n                return this.check_sorting_of_string_or_number(sorted_colon_element_list);\n          }\n    }\n\n    async check_sorting_of_complexity(sorted_colon_element_list) {\n    \n\n           const complexityArray = [\"high\" , \"medium\", \"low\"]\n           let complexity_check = true;\n\n           sorted_colon_element_list.forEach((element, index, arr) => {\n\n            if(index+1 < arr.length){\n                const first_element_complextiy = complexityArray.indexOf(element); \n                const second_element_omplexity = complexityArray.indexOf(arr[index+1]);\n\n                const check_complexity =  second_element_omplexity - first_element_complextiy; // for same complexty low-low, high-high, medium-medum difference should be 0, low-high, low-medium etc. difference >0, if difference <0 thats meaning sorting is  not true\n                \n                if(check_complexity<0)\n                   complexity_check = false;\n            }\n           });\n           return complexity_check;\n   }\n\n   async check_sorting_of_string_or_number(sorted_colon_element_list) {\n\n        if(sorted_colon_element_list.sort() == sorted_colon_element_list){\n            return true;\n        }else\n            return false;\n   }   \n\n    async check_sorting_of_number_of_cases(sorted_colon_element_list) {\n    \n        let list = [];\n        sorted_colon_element_list.forEach((element, index, arr) => {\n\n            const num = unabbreviateNumber(element.getText());\n\n            list[index] = num;\n        });\n\n        if(list.sort().toEqual){\n            return true;\n        }else\n            return false;\n  } \n\n    async assert(condition, message) {\n        if (!condition) {\n            try {\n                throw new Error(message);\n            } catch(e) {\n                return console.error(e);\n            \n            }\n        }\n}\n} \n export default new MainPage();\n"]}},"mtime":1647442803802},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/testdata/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/testdata/cyber_attack_statistics_testdata.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nmodule.exports = {\n  PAGE_URL: \"https://mystifying-beaver-ee03b5.netlify.app/\",\n  RANDOM_DATA: Math.floor(Math.random() * 1000000000 + 1)\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN5YmVyX2F0dGFja19zdGF0aXN0aWNzX3Rlc3RkYXRhLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJQQUdFX1VSTCIsIlJBTkRPTV9EQVRBIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsUUFBUSxFQUFFLCtDQURHO0FBRWJDLEVBQUFBLFdBQVcsRUFBRUMsSUFBSSxDQUFDQyxLQUFMLENBQVlELElBQUksQ0FBQ0UsTUFBTCxLQUFnQixVQUFqQixHQUErQixDQUExQztBQUZBLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rYWRlci9JZGVhUHJvamVjdHMvRWNsZWN0aWNJUV90ZXN0X2F1dG9tYXRpb24vc3JjL3Rlc3RkYXRhLyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFBBR0VfVVJMOiBcImh0dHBzOi8vbXlzdGlmeWluZy1iZWF2ZXItZWUwM2I1Lm5ldGxpZnkuYXBwL1wiLFxuICAgIFJBTkRPTV9EQVRBOiBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMCkgKyAxKSxcbiAgfTtcbiJdfQ==","map":{"version":3,"sources":["cyber_attack_statistics_testdata.js"],"names":["module","exports","PAGE_URL","RANDOM_DATA","Math","floor","random"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE,+CADG;AAEbC,EAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,UAAjB,GAA+B,CAA1C;AAFA,CAAjB","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/testdata/","sourcesContent":["module.exports = {\n    PAGE_URL: \"https://mystifying-beaver-ee03b5.netlify.app/\",\n    RANDOM_DATA: Math.floor((Math.random() * 1000000000) + 1),\n  };\n"]}},"mtime":1646831611102},"{\"assumptions\":{},\"sourceRoot\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"filename\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/kader/IdeaProjects/EclecticIQ_test_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.7:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cyber_attack_statistics_testdata = require(\"../testdata/cyber_attack_statistics_testdata\");\n\nclass Page {\n  open_cyber_attack_statistics() {\n    browser.maximizeWindow();\n    return browser.url(_cyber_attack_statistics_testdata.PAGE_URL);\n  }\n\n  reload_browser() {\n    console.log(\"Reload session of browser\");\n    browser.reload();\n  }\n\n  wait_page_upload() {\n    browser.waitUntil(() => browser.execute(() => document.readyState === 'complete')), {\n      timeout: 60 * 1000,\n      timeoutMsg: 'Message on failure'\n    };\n  }\n\n}\n\nexports.default = Page;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwibmFtZXMiOlsiUGFnZSIsIm9wZW5fY3liZXJfYXR0YWNrX3N0YXRpc3RpY3MiLCJicm93c2VyIiwibWF4aW1pemVXaW5kb3ciLCJ1cmwiLCJQQUdFX1VSTCIsInJlbG9hZF9icm93c2VyIiwiY29uc29sZSIsImxvZyIsInJlbG9hZCIsIndhaXRfcGFnZV91cGxvYWQiLCJ3YWl0VW50aWwiLCJleGVjdXRlIiwiZG9jdW1lbnQiLCJyZWFkeVN0YXRlIiwidGltZW91dCIsInRpbWVvdXRNc2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxNQUFNQSxJQUFOLENBQVc7QUFFdEJDLEVBQUFBLDRCQUE0QixHQUFHO0FBQzNCQyxJQUFBQSxPQUFPLENBQUNDLGNBQVI7QUFDQSxXQUFPRCxPQUFPLENBQUNFLEdBQVIsQ0FBWUMsMENBQVosQ0FBUDtBQUNIOztBQUVEQyxFQUFBQSxjQUFjLEdBQUk7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQU4sSUFBQUEsT0FBTyxDQUFDTyxNQUFSO0FBQ0Q7O0FBRUhDLEVBQUFBLGdCQUFnQixHQUFFO0FBQ2RSLElBQUFBLE9BQU8sQ0FBQ1MsU0FBUixDQUNJLE1BQU1ULE9BQU8sQ0FBQ1UsT0FBUixDQUFnQixNQUFNQyxRQUFRLENBQUNDLFVBQVQsS0FBd0IsVUFBOUMsQ0FEVixHQUVJO0FBQ0VDLE1BQUFBLE9BQU8sRUFBRSxLQUFLLElBRGhCO0FBRUVDLE1BQUFBLFVBQVUsRUFBRTtBQUZkLEtBRko7QUFNSDs7QUFuQnFCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9rYWRlci9JZGVhUHJvamVjdHMvRWNsZWN0aWNJUV90ZXN0X2F1dG9tYXRpb24vc3JjL3BhZ2VzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBBR0VfVVJMIH0gZnJvbSBcIi4uL3Rlc3RkYXRhL2N5YmVyX2F0dGFja19zdGF0aXN0aWNzX3Rlc3RkYXRhXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2Uge1xuXG4gICAgb3Blbl9jeWJlcl9hdHRhY2tfc3RhdGlzdGljcygpIHtcbiAgICAgICAgYnJvd3Nlci5tYXhpbWl6ZVdpbmRvdygpO1xuICAgICAgICByZXR1cm4gYnJvd3Nlci51cmwoUEFHRV9VUkwpO1xuICAgIH1cblxuICAgIHJlbG9hZF9icm93c2VyICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJSZWxvYWQgc2Vzc2lvbiBvZiBicm93c2VyXCIpO1xuICAgICAgICBicm93c2VyLnJlbG9hZCgpO1xuICAgICAgfVxuXG4gICAgd2FpdF9wYWdlX3VwbG9hZCgpe1xuICAgICAgICBicm93c2VyLndhaXRVbnRpbChcbiAgICAgICAgICAgICgpID0+IGJyb3dzZXIuZXhlY3V0ZSgoKSA9PiBkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSksXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRpbWVvdXQ6IDYwICogMTAwMCwgXG4gICAgICAgICAgICAgIHRpbWVvdXRNc2c6ICdNZXNzYWdlIG9uIGZhaWx1cmUnXG4gICAgICAgICAgICB9XG4gICAgfVxufVxuIl19","map":{"version":3,"sources":["page.js"],"names":["Page","open_cyber_attack_statistics","browser","maximizeWindow","url","PAGE_URL","reload_browser","console","log","reload","wait_page_upload","waitUntil","execute","document","readyState","timeout","timeoutMsg"],"mappings":";;;;;;;AAAA;;AAEe,MAAMA,IAAN,CAAW;AAEtBC,EAAAA,4BAA4B,GAAG;AAC3BC,IAAAA,OAAO,CAACC,cAAR;AACA,WAAOD,OAAO,CAACE,GAAR,CAAYC,0CAAZ,CAAP;AACH;;AAEDC,EAAAA,cAAc,GAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAN,IAAAA,OAAO,CAACO,MAAR;AACD;;AAEHC,EAAAA,gBAAgB,GAAE;AACdR,IAAAA,OAAO,CAACS,SAAR,CACI,MAAMT,OAAO,CAACU,OAAR,CAAgB,MAAMC,QAAQ,CAACC,UAAT,KAAwB,UAA9C,CADV,GAEI;AACEC,MAAAA,OAAO,EAAE,KAAK,IADhB;AAEEC,MAAAA,UAAU,EAAE;AAFd,KAFJ;AAMH;;AAnBqB","sourceRoot":"/Users/kader/IdeaProjects/EclecticIQ_test_automation/src/pages/","sourcesContent":["import { PAGE_URL } from \"../testdata/cyber_attack_statistics_testdata\";\n\nexport default class Page {\n\n    open_cyber_attack_statistics() {\n        browser.maximizeWindow();\n        return browser.url(PAGE_URL);\n    }\n\n    reload_browser () {\n        console.log(\"Reload session of browser\");\n        browser.reload();\n      }\n\n    wait_page_upload(){\n        browser.waitUntil(\n            () => browser.execute(() => document.readyState === 'complete')),\n            {\n              timeout: 60 * 1000, \n              timeoutMsg: 'Message on failure'\n            }\n    }\n}\n"]}},"mtime":1646314758206}}